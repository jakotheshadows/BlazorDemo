#pragma checksum "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e2d813c5d96073acf6bc27a0afa4af3fd145dd4c"
// <auto-generated/>
#pragma warning disable 1591
namespace WebApplication1.Client.Pages.FetchData
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
    using System.Net.Http;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using Microsoft.JSInterop;
    using WebApplication1.Client;
    using WebApplication1.Client.Shared;
    [Microsoft.AspNetCore.Components.Layouts.LayoutAttribute(typeof(MainLayout))]

    [Microsoft.AspNetCore.Components.RouteAttribute("/fetchdata")]
    public class FetchDataPage : FetchDataCode
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
            base.BuildRenderTree(builder);
            builder.AddMarkupContent(0, "<h1>Weather forecast</h1>\r\n\r\n");
            builder.AddMarkupContent(1, "<p>This component demonstrates fetching data from the server.</p>\r\n\r\n");
            builder.OpenElement(2, "input");
            builder.AddAttribute(3, "type", "text");
            builder.AddAttribute(4, "value", Microsoft.AspNetCore.Components.BindMethods.GetValue(ComponentString));
            builder.AddAttribute(5, "onchange", Microsoft.AspNetCore.Components.BindMethods.SetValueHandler(__value => ComponentString = __value, ComponentString));
            builder.CloseElement();
            builder.AddContent(6, "\r\n");
            builder.OpenElement(7, "button");
            builder.AddAttribute(8, "class", "btn btn-primary");
            builder.AddAttribute(9, "onclick", Microsoft.AspNetCore.Components.BindMethods.GetEventHandlerValue<Microsoft.AspNetCore.Components.UIMouseEventArgs>(ComponentMethod));
            builder.AddContent(10, "ComponentMethod");
            builder.CloseElement();
            builder.AddContent(11, "\r\n\r\n");
#line 11 "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml"
 if (Forecasts == null)
{

#line default
#line hidden
            builder.AddContent(12, "    ");
            builder.AddMarkupContent(13, "<p><em>Loading...</em></p>\r\n");
#line 14 "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml"
}
else
{

#line default
#line hidden
            builder.AddContent(14, "    ");
            builder.OpenElement(15, "table");
            builder.AddAttribute(16, "class", "table");
            builder.AddContent(17, "\r\n        ");
            builder.OpenElement(18, "thead");
            builder.AddContent(19, "\r\n            ");
            builder.OpenElement(20, "tr");
            builder.AddContent(21, "\r\n                ");
            __Blazor.WebApplication1.Client.Pages.FetchData.FetchDataPage.TypeInference.CreateSortableColumnHeader_0(builder, 22, 23, "Date", 24, "Date", 25, Forecasts, 26, UpdateCollection, 27, x => x.Date, 28, Microsoft.AspNetCore.Components.BindMethods.GetValue(CurrentSortColumn), 29, __value => CurrentSortColumn = __value);
            builder.AddContent(30, "\r\n                ");
            __Blazor.WebApplication1.Client.Pages.FetchData.FetchDataPage.TypeInference.CreateSortableColumnHeader_1(builder, 31, 32, "Temp. (C)", 33, "Celsius", 34, Forecasts, 35, UpdateCollection, 36, x => x.TemperatureC, 37, Microsoft.AspNetCore.Components.BindMethods.GetValue(CurrentSortColumn), 38, __value => CurrentSortColumn = __value);
            builder.AddContent(39, "\r\n                ");
            __Blazor.WebApplication1.Client.Pages.FetchData.FetchDataPage.TypeInference.CreateSortableColumnHeader_2(builder, 40, 41, "Temp. (F)", 42, "Fahrenheit", 43, Forecasts, 44, UpdateCollection, 45, x => x.TemperatureF, 46, Microsoft.AspNetCore.Components.BindMethods.GetValue(CurrentSortColumn), 47, __value => CurrentSortColumn = __value);
            builder.AddContent(48, "\r\n                ");
            __Blazor.WebApplication1.Client.Pages.FetchData.FetchDataPage.TypeInference.CreateSortableColumnHeader_3(builder, 49, 50, "Summary", 51, "Summary", 52, Forecasts, 53, UpdateCollection, 54, x => x.Summary, 55, Microsoft.AspNetCore.Components.BindMethods.GetValue(CurrentSortColumn), 56, __value => CurrentSortColumn = __value);
            builder.AddMarkupContent(57, "\r\n            ");
            builder.CloseElement();
            builder.AddContent(58, "\r\n        ");
            builder.CloseElement();
            builder.AddContent(59, "\r\n        ");
            builder.OpenElement(60, "tbody");
            builder.AddContent(61, "\r\n");
#line 55 "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml"
             foreach (var forecast in Forecasts)
            {

#line default
#line hidden
            builder.AddContent(62, "                ");
            builder.OpenElement(63, "tr");
            builder.AddContent(64, "\r\n                    ");
            builder.OpenElement(65, "td");
            builder.AddContent(66, forecast.Date.ToShortDateString());
            builder.CloseElement();
            builder.AddContent(67, "\r\n                    ");
            builder.OpenElement(68, "td");
            builder.AddContent(69, forecast.TemperatureC);
            builder.CloseElement();
            builder.AddContent(70, "\r\n                    ");
            builder.OpenElement(71, "td");
            builder.AddContent(72, forecast.TemperatureF);
            builder.CloseElement();
            builder.AddContent(73, "\r\n                    ");
            builder.OpenElement(74, "td");
            builder.AddContent(75, forecast.Summary);
            builder.CloseElement();
            builder.AddContent(76, "\r\n                ");
            builder.CloseElement();
            builder.AddContent(77, "\r\n");
#line 63 "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml"
            }

#line default
#line hidden
            builder.AddContent(78, "        ");
            builder.CloseElement();
            builder.AddContent(79, "\r\n    ");
            builder.CloseElement();
            builder.AddContent(80, "\r\n");
#line 66 "C:\Users\Anthony\Source\Repos\WebApplication1\WebApplication1.Client\Pages\FetchData\FetchDataPage.cshtml"
}

#line default
#line hidden
        }
        #pragma warning restore 1998
    }
}
namespace __Blazor.WebApplication1.Client.Pages.FetchData.FetchDataPage
{
    #line hidden
    internal static class TypeInference
    {
        public static void CreateSortableColumnHeader_0<TCollectionType, TPropertyType>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, System.String __arg0, int __seq1, System.String __arg1, int __seq2, TCollectionType[] __arg2, int __seq3, System.Action<TCollectionType[]> __arg3, int __seq4, global::System.Func<TCollectionType, TPropertyType> __arg4, int __seq5, System.String __arg5, int __seq6, System.Action<System.String> __arg6)
        {
        builder.OpenComponent<global::WebApplication1.Client.Components.SortableColumnHeader.SortableColumnHeader<TCollectionType, TPropertyType>>(seq);
        builder.AddAttribute(__seq0, "ColumnTitle", __arg0);
        builder.AddAttribute(__seq1, "SortColumn", __arg1);
        builder.AddAttribute(__seq2, "Collection", __arg2);
        builder.AddAttribute(__seq3, "UpdateCollection", __arg3);
        builder.AddAttribute(__seq4, "SortBy", __arg4);
        builder.AddAttribute(__seq5, "CurrentSortColumn", __arg5);
        builder.AddAttribute(__seq6, "CurrentSortColumnChanged", __arg6);
        builder.CloseComponent();
        }
        public static void CreateSortableColumnHeader_1<TCollectionType, TPropertyType>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, System.String __arg0, int __seq1, System.String __arg1, int __seq2, TCollectionType[] __arg2, int __seq3, System.Action<TCollectionType[]> __arg3, int __seq4, global::System.Func<TCollectionType, TPropertyType> __arg4, int __seq5, System.String __arg5, int __seq6, System.Action<System.String> __arg6)
        {
        builder.OpenComponent<global::WebApplication1.Client.Components.SortableColumnHeader.SortableColumnHeader<TCollectionType, TPropertyType>>(seq);
        builder.AddAttribute(__seq0, "ColumnTitle", __arg0);
        builder.AddAttribute(__seq1, "SortColumn", __arg1);
        builder.AddAttribute(__seq2, "Collection", __arg2);
        builder.AddAttribute(__seq3, "UpdateCollection", __arg3);
        builder.AddAttribute(__seq4, "SortBy", __arg4);
        builder.AddAttribute(__seq5, "CurrentSortColumn", __arg5);
        builder.AddAttribute(__seq6, "CurrentSortColumnChanged", __arg6);
        builder.CloseComponent();
        }
        public static void CreateSortableColumnHeader_2<TCollectionType, TPropertyType>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, System.String __arg0, int __seq1, System.String __arg1, int __seq2, TCollectionType[] __arg2, int __seq3, System.Action<TCollectionType[]> __arg3, int __seq4, global::System.Func<TCollectionType, TPropertyType> __arg4, int __seq5, System.String __arg5, int __seq6, System.Action<System.String> __arg6)
        {
        builder.OpenComponent<global::WebApplication1.Client.Components.SortableColumnHeader.SortableColumnHeader<TCollectionType, TPropertyType>>(seq);
        builder.AddAttribute(__seq0, "ColumnTitle", __arg0);
        builder.AddAttribute(__seq1, "SortColumn", __arg1);
        builder.AddAttribute(__seq2, "Collection", __arg2);
        builder.AddAttribute(__seq3, "UpdateCollection", __arg3);
        builder.AddAttribute(__seq4, "SortBy", __arg4);
        builder.AddAttribute(__seq5, "CurrentSortColumn", __arg5);
        builder.AddAttribute(__seq6, "CurrentSortColumnChanged", __arg6);
        builder.CloseComponent();
        }
        public static void CreateSortableColumnHeader_3<TCollectionType, TPropertyType>(global::Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder, int seq, int __seq0, System.String __arg0, int __seq1, System.String __arg1, int __seq2, TCollectionType[] __arg2, int __seq3, System.Action<TCollectionType[]> __arg3, int __seq4, global::System.Func<TCollectionType, TPropertyType> __arg4, int __seq5, System.String __arg5, int __seq6, System.Action<System.String> __arg6)
        {
        builder.OpenComponent<global::WebApplication1.Client.Components.SortableColumnHeader.SortableColumnHeader<TCollectionType, TPropertyType>>(seq);
        builder.AddAttribute(__seq0, "ColumnTitle", __arg0);
        builder.AddAttribute(__seq1, "SortColumn", __arg1);
        builder.AddAttribute(__seq2, "Collection", __arg2);
        builder.AddAttribute(__seq3, "UpdateCollection", __arg3);
        builder.AddAttribute(__seq4, "SortBy", __arg4);
        builder.AddAttribute(__seq5, "CurrentSortColumn", __arg5);
        builder.AddAttribute(__seq6, "CurrentSortColumnChanged", __arg6);
        builder.CloseComponent();
        }
    }
}
#pragma warning restore 1591
